<?xml version="1.0" encoding="UTF-8"?>
<microprocessor name="PID Tuner" description="No description set." width="6" length="3" id_counter="37" id_counter_node="16" sym2="9508" sym3="5458" sym4="13650" sym5="12887" sym6="2" sym9="3524" sym10="5252" sym11="5260" sym12="5268" sym13="5268" sym14="3548">
	<nodes>
		<n id="1" component_id="3">
			<node label="Video Out" type="6" description="The output to send to a monitor"/>
		</n>
		<n id="2" component_id="5">
			<node label="P In" mode="1" type="1" description="The P value to use: note divide by divisor">
				<position z="1"/>
			</node>
		</n>
		<n id="3" component_id="7">
			<node label="I In" mode="1" type="1" description="The I value to use: note divide by divisor">
				<position x="1" z="1"/>
			</node>
		</n>
		<n id="4" component_id="9">
			<node label="D In" mode="1" type="1" description="The D value to use: note divide by divisor">
				<position x="2" z="1"/>
			</node>
		</n>
		<n id="5" component_id="11">
			<node label="Out Min" mode="1" type="1" description="The minimum output value (clamp)">
				<position x="3" z="1"/>
			</node>
		</n>
		<n id="6" component_id="14">
			<node label="Out Max" mode="1" type="1" description="The maximum output value (clamp)">
				<position x="4" z="1"/>
			</node>
		</n>
		<n id="7" component_id="15">
			<node label="Screen Y Min" mode="1" type="1" description="Min Y value: measured, setpoint, output.">
				<position x="1"/>
			</node>
		</n>
		<n id="8" component_id="17">
			<node label="Screen Y Max" mode="1" type="1" description="Max Y value: measured, setpoint, output">
				<position x="2"/>
			</node>
		</n>
		<n id="9" component_id="19">
			<node label="X Scale (Ticks)" mode="1" type="1" description="History of data to display on screen (in ticks)">
				<position x="3"/>
			</node>
		</n>
		<n id="10" component_id="21">
			<node label="Setpoint Gain" mode="1" type="1" description="The setpoint will be scaled by this.">
				<position z="2"/>
			</node>
		</n>
		<n id="11" component_id="23">
			<node label="Setpoint" mode="1" type="1" description="The target setpoint for the PID.">
				<position x="1" z="2"/>
			</node>
		</n>
		<n id="12" component_id="24">
			<node label="Show Output" mode="1" description="If true show the output signal.">
				<position x="4"/>
			</node>
		</n>
		<n id="13" component_id="29">
			<node label="Input" mode="1" type="1" description="The measured input value">
				<position x="2" z="2"/>
			</node>
		</n>
		<n id="14" component_id="31">
			<node label="Input Gain" mode="1" type="1" description="Scaling factor to apply to the Input">
				<position x="3" z="2"/>
			</node>
		</n>
		<n id="15" component_id="34">
			<node label="PID Output" type="1" description="The output value from the PID.">
				<position x="4" z="2"/>
			</node>
		</n>
		<n id="16" component_id="37">
			<node label="PID Divisor" mode="1" type="1" description="P, I and D values will be divided by this">
				<position x="5" z="1"/>
			</node>
		</n>
	</nodes>
	<group>
		<data>
			<inputs/>
			<outputs/>
		</data>
		<components>
			<c type="40">
				<object id="25" count="15">
					<pos x="-1" y="-1"/>
					<in1 component_id="23"/>
					<in2 component_id="21"/>
					<in3 component_id="29"/>
					<in4 component_id="31"/>
					<in5 component_id="5"/>
					<in6 component_id="7"/>
					<in7 component_id="9"/>
					<in8 component_id="11"/>
					<in9 component_id="14"/>
					<in10 component_id="37"/>
					<in11 component_id="19"/>
					<in12 component_id="15"/>
					<in13 component_id="17"/>
					<in14/>
					<in15/>
				</object>
			</c>
			<c type="41">
				<object id="26" count="1">
					<pos x="0.5" y="-0.75"/>
					<inc component_id="25"/>
					<in1 component_id="24"/>
				</object>
			</c>
			<c type="56">
				<object id="27" script='-- Author: Tom Shackell
-- GitHub: &lt;GithubLink&gt;
-- Workshop: &lt;WorkshopLink&gt;
--
-- Developed &amp; Minimized using LifeBoatAPI - Stormworks Lua plugin for VSCode
-- https://code.visualstudio.com/download (search "Stormworks Lua with LifeboatAPI" extension)
--      By Nameous Changey
-- Minimized Size: 1719 (2036 with comment) chars

K=output
F=math
W=input
w=screen
u=w.drawLine
x=w.setColor
b=W.getNumber
Y=F.max
ai={P=function(k,f)local f=f or{}return{H=f.H or 0,G=f.G or 0,J=f.J or 0,V=f.V or 0,X=f.X or 0,C=f.C or-(1/0),y=f.y or(1/0),R=0,Q=0,E=k.E}end,E=function(_,ap,ar,D)local D=D or(1/60)local r=ap-ar
local af=(_.Q+r)*(1-(_.X/D))local aj=r-_.R
local aq=_.H*r+_.G*af+_.J*aj+_.V
_.R=r
_.Q=af
return F.min(Y(aq,_.C),_.y)end}function ag(c,ab,ae,ak,al)return(c-ab)/(ak-ab)*(al-ae)+ae end
ah={P=function(k,am)local U={l={},h=am,e=1,d=0,I=k.I,M=k.M,O=k.O}U.aw=k
return U
end,I=function(_,ad)if _.d&lt;_.h then
_.l[(_.e+_.d-1)%_.h+1]=ad
_.d=_.d+1
else
_.l[_.e]=ad
_.e=(_.e%_.h)+1
end
end,M=function(_,m)if m~=_.h then
if m&lt;_.d then
local at=_.d-m
_.e=(_.e+at-1)%_.h+1
_.d=m
end
local T={}for j=1,_.d do
T[j]=_.l[(_.e+j-2)%_.h+1]end
_.l=T
_.h=m
_.e=1
end
end,O=function(_)local v=0
return function()if v&lt;_.d then
v=v+1
return _.l[(_.e+v-2)%_.h+1]end
end
end}i=ai:P({})L=ah:P(60)a={N=1.0,B=-100,z=100,ac=false}function onTick()local au=b(1)or 0
local an=b(2)or 1
local as=b(3)or 0
local ao=b(4)or 1
i.H=b(5)or 0
i.G=b(6)or 0
i.J=b(7)or 0
i.C=b(8)or-1
i.y=b(9)or 1
a.N=Y(b(10)or 1,1)a.B=b(11)or-1
a.z=b(12)or 1
a.ac=W.getBool(1)local s=au*an
local p=as*ao
local Z=i:E(s,p)L:M(F.ceil(a.N))L:I({s=s,p=p,K=Z})K.setNumber(1,Z)end
function onDraw()local S,av=w.getWidth(),w.getHeight()local g=nil
local j=0
local o=function(n,min,max)return(min&gt;=max)and 0 or ag(n,min,av,max,0)end
local aa=o(0,a.B,a.z)x(64,64,64)u(0,aa,S,aa)for n in L:O()do
local c=j/a.N*S
local q=o(n.s,a.B,a.z)local t=o(n.p,a.B,a.z)local A=o(n.K,i.C,i.y)if g then
if a.ac then
x(0,0,255)u(g.c,g.A,c,A)end
x(255,0,0)u(g.c,g.q,c,q)x(255,255,0)u(g.c,g.t,c,t)end
g={c=c,q=q,t=t,A=A}j=j+1
end
end
'>
					<pos x="1.75" y="-0.75"/>
					<in1 component_id="26"/>
				</object>
			</c>
			<c type="31">
				<object id="35">
					<pos x="3"/>
					<in1 component_id="27"/>
				</object>
			</c>
		</components>
		<components_bridge>
			<c type="7">
				<object id="3">
					<pos x="4.25" y="-0.75"/>
					<in1 component_id="27" node_index="1"/>
				</object>
			</c>
			<c type="2">
				<object id="5">
					<pos x="-3.5" y="1"/>
				</object>
			</c>
			<c type="2">
				<object id="7">
					<pos x="-3.5" y="0.5"/>
				</object>
			</c>
			<c type="2">
				<object id="9">
					<pos x="-3.5"/>
				</object>
			</c>
			<c type="2">
				<object id="11">
					<pos x="-3.5" y="-0.5"/>
				</object>
			</c>
			<c type="2">
				<object id="14">
					<pos x="-3.5" y="-1"/>
				</object>
			</c>
			<c type="2">
				<object id="15">
					<pos x="-3.5" y="-2.75"/>
				</object>
			</c>
			<c type="2">
				<object id="17">
					<pos x="-3.5" y="-3.25"/>
				</object>
			</c>
			<c type="2">
				<object id="19">
					<pos x="-3.5" y="-2.25"/>
				</object>
			</c>
			<c type="2">
				<object id="21">
					<pos x="-3.5" y="2.75"/>
				</object>
			</c>
			<c type="2">
				<object id="23">
					<pos x="-3.5" y="3.25"/>
				</object>
			</c>
			<c>
				<object id="24">
					<pos x="-3.5" y="-3.75"/>
				</object>
			</c>
			<c type="2">
				<object id="29">
					<pos x="-3.5" y="2.25"/>
				</object>
			</c>
			<c type="2">
				<object id="31">
					<pos x="-3.5" y="1.75"/>
				</object>
			</c>
			<c type="3">
				<object id="34">
					<pos x="4.25"/>
					<in1 component_id="35"/>
				</object>
			</c>
			<c type="2">
				<object id="37">
					<pos x="-3.5" y="-1.5"/>
				</object>
			</c>
		</components_bridge>
		<groups/>
		<component_states>
			<c0 id="25" count="15">
				<pos x="-1" y="-1"/>
				<in1 component_id="23"/>
				<in2 component_id="21"/>
				<in3 component_id="29"/>
				<in4 component_id="31"/>
				<in5 component_id="5"/>
				<in6 component_id="7"/>
				<in7 component_id="9"/>
				<in8 component_id="11"/>
				<in9 component_id="14"/>
				<in10 component_id="37"/>
				<in11 component_id="19"/>
				<in12 component_id="15"/>
				<in13 component_id="17"/>
				<in14/>
				<in15/>
			</c0>
			<c1 id="26" count="1">
				<pos x="0.5" y="-0.75"/>
				<inc component_id="25"/>
				<in1 component_id="24"/>
			</c1>
			<c2 id="27" script='-- Author: Tom Shackell
-- GitHub: &lt;GithubLink&gt;
-- Workshop: &lt;WorkshopLink&gt;
--
-- Developed &amp; Minimized using LifeBoatAPI - Stormworks Lua plugin for VSCode
-- https://code.visualstudio.com/download (search "Stormworks Lua with LifeboatAPI" extension)
--      By Nameous Changey
-- Minimized Size: 1719 (2036 with comment) chars

K=output
F=math
W=input
w=screen
u=w.drawLine
x=w.setColor
b=W.getNumber
Y=F.max
ai={P=function(k,f)local f=f or{}return{H=f.H or 0,G=f.G or 0,J=f.J or 0,V=f.V or 0,X=f.X or 0,C=f.C or-(1/0),y=f.y or(1/0),R=0,Q=0,E=k.E}end,E=function(_,ap,ar,D)local D=D or(1/60)local r=ap-ar
local af=(_.Q+r)*(1-(_.X/D))local aj=r-_.R
local aq=_.H*r+_.G*af+_.J*aj+_.V
_.R=r
_.Q=af
return F.min(Y(aq,_.C),_.y)end}function ag(c,ab,ae,ak,al)return(c-ab)/(ak-ab)*(al-ae)+ae end
ah={P=function(k,am)local U={l={},h=am,e=1,d=0,I=k.I,M=k.M,O=k.O}U.aw=k
return U
end,I=function(_,ad)if _.d&lt;_.h then
_.l[(_.e+_.d-1)%_.h+1]=ad
_.d=_.d+1
else
_.l[_.e]=ad
_.e=(_.e%_.h)+1
end
end,M=function(_,m)if m~=_.h then
if m&lt;_.d then
local at=_.d-m
_.e=(_.e+at-1)%_.h+1
_.d=m
end
local T={}for j=1,_.d do
T[j]=_.l[(_.e+j-2)%_.h+1]end
_.l=T
_.h=m
_.e=1
end
end,O=function(_)local v=0
return function()if v&lt;_.d then
v=v+1
return _.l[(_.e+v-2)%_.h+1]end
end
end}i=ai:P({})L=ah:P(60)a={N=1.0,B=-100,z=100,ac=false}function onTick()local au=b(1)or 0
local an=b(2)or 1
local as=b(3)or 0
local ao=b(4)or 1
i.H=b(5)or 0
i.G=b(6)or 0
i.J=b(7)or 0
i.C=b(8)or-1
i.y=b(9)or 1
a.N=Y(b(10)or 1,1)a.B=b(11)or-1
a.z=b(12)or 1
a.ac=W.getBool(1)local s=au*an
local p=as*ao
local Z=i:E(s,p)L:M(F.ceil(a.N))L:I({s=s,p=p,K=Z})K.setNumber(1,Z)end
function onDraw()local S,av=w.getWidth(),w.getHeight()local g=nil
local j=0
local o=function(n,min,max)return(min&gt;=max)and 0 or ag(n,min,av,max,0)end
local aa=o(0,a.B,a.z)x(64,64,64)u(0,aa,S,aa)for n in L:O()do
local c=j/a.N*S
local q=o(n.s,a.B,a.z)local t=o(n.p,a.B,a.z)local A=o(n.K,i.C,i.y)if g then
if a.ac then
x(0,0,255)u(g.c,g.A,c,A)end
x(255,0,0)u(g.c,g.q,c,q)x(255,255,0)u(g.c,g.t,c,t)end
g={c=c,q=q,t=t,A=A}j=j+1
end
end
'>
				<pos x="1.75" y="-0.75"/>
				<in1 component_id="26"/>
			</c2>
			<c3 id="35">
				<pos x="3"/>
				<in1 component_id="27"/>
			</c3>
		</component_states>
		<component_bridge_states>
			<c0 id="3">
				<pos x="4.25" y="-0.75"/>
				<in1 component_id="27" node_index="1"/>
			</c0>
			<c1 id="5">
				<pos x="-3.5" y="1"/>
			</c1>
			<c2 id="7">
				<pos x="-3.5" y="0.5"/>
			</c2>
			<c3 id="9">
				<pos x="-3.5"/>
			</c3>
			<c4 id="11">
				<pos x="-3.5" y="-0.5"/>
			</c4>
			<c5 id="14">
				<pos x="-3.5" y="-1"/>
			</c5>
			<c6 id="15">
				<pos x="-3.5" y="-2.75"/>
			</c6>
			<c7 id="17">
				<pos x="-3.5" y="-3.25"/>
			</c7>
			<c8 id="19">
				<pos x="-3.5" y="-2.25"/>
			</c8>
			<c9 id="21">
				<pos x="-3.5" y="2.75"/>
			</c9>
			<c10 id="23">
				<pos x="-3.5" y="3.25"/>
			</c10>
			<c11 id="24">
				<pos x="-3.5" y="-3.75"/>
			</c11>
			<c12 id="29">
				<pos x="-3.5" y="2.25"/>
			</c12>
			<c13 id="31">
				<pos x="-3.5" y="1.75"/>
			</c13>
			<c14 id="34">
				<pos x="4.25"/>
				<in1 component_id="35"/>
			</c14>
			<c15 id="37">
				<pos x="-3.5" y="-1.5"/>
			</c15>
		</component_bridge_states>
		<group_states/>
	</group>
</microprocessor>

